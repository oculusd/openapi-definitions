openapi: 3.0.0
info:
  title: OculusD.com, Inc IoT Thing/Sensor API
  description: Please refer to [the online documentation](https://www.oculusd.com/) for more detailed explination of the service
  version: "2.0"

servers:
  - url: https://data-{region}.oculusd.com/v2
    description: The IoT/IIoT thing/sensor API endpoints base path, version 2
    variables:
      region:
        enum:
          - us1
          - eu1
        default: us1
        description: Regional endpoints (data can be stored in USA, North Virginia or The Netherlands)
  - url: http://{host}{port}{path}
    description: A simple local test server, for those implementing a local integration simulator. The example deonstrates a typical Python Flask development server
    variables:
      host:
        default: "127.0.0.1"
      port:
        default: ":5000"
      path:
        default: /

paths:
  /ping:
    get:
      summary: Returns a general response
      description: This function is intended for checking service availability and response time. This is a public endpoint that does not require any authorisation. 
      responses:
        '201':
          $ref: '#/components/responses/PingResponse'
        '404':
          description: As long as the function is unimplemented, you should receive an error 404
  
  /register/root-account/{emailAddress}:
    parameters:
      - in: path
        name: emailAddress
        schema:
          type: "string"
        required: true
        description: Valid e-mail address for the new root account. Each root account can only have one e-mail address linked to it ever.
    post:
      summary: Registers a new root account for the provided e-mail address
      description: A root account is the primary account from where a organisation or even hobby maker can start to define things, sensors, users etc.
      requestBody:
        description: Additional information required for root account registration. By registering, you accept the terms and conditions as described at [https://www.oculusd.com/](https://www.oculusd.com/)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RootAccountRegistrationSchema'
      responses:
        '201':
          $ref: '#/components/responses/RootAccountRegisterSuccessResponse'
        '520':
          $ref: '#/components/responses/GenericErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'

  /activate/root-account/{emailAddress}/{activationToken}:
    parameters:
      - in: path
        name: emailAddress
        schema:
          type: "string"
        required: true
        description: Valid e-mail address for the new root account. This is the email address you used during the registration call
      - in: path
        name: activationToken
        schema:
          type: "string"
        required: true
        description: the token you received in your e-mail
    post:
      summary: Activate a PENDING root account for the provided e-mail address and activation token
      description: Because placing password or passsphrase strings in query arameters is a bad idea, supply it rather in the POST body. After a succesful activation, you should receive another email confirming the activation
      requestBody:
        description: Supply the same passphrase you used during registration.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RootAccountActivationSchema'
      responses:
          '201':
            $ref: '#/components/responses/StandardResultResponse'
          '520':
            $ref: '#/components/responses/GenericErrorResponse'
          '404':
            $ref: '#/components/responses/NotFoundResponse'

  /account/root-account/{rootAccountId}/authenticate:
    parameters:
      - in: path
        name: rootAccountId
        schema:
          type: "string"
        required: true
        description: Your root account
    post:
      summary: Authenticate a root account
      description: Certain API calls require an authenticated root account token. This function allow you to authenticate your root account and will return a token on succesfull authentication.
      requestBody:
        description: Supply the same passphrase you used during registration.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RootAccountAuthenticationSchema'
      responses:
          '201':
            $ref: '#/components/responses/StandardResultResponse'
          '520':
            $ref: '#/components/responses/GenericErrorResponse'
          '404':
            $ref: '#/components/responses/NotFoundResponse'

  /account/root-account/{rootAccountId}/logout:
    parameters:
      - in: path
        name: rootAccountId
        schema:
          type: "string"
        required: true
        description: Your root account
    get:
      summary: No additional parameters is required and if the supplied token is still valid, the account will be logged out
      description: This function is intended to force a cancelation of a valid authentication token - effectively logging out. The exact same response will always be returned, regardless if the token was valid or not or if the account was found or not etc.
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/LogoutResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse' 

  /account/root-account/{rootAccountId}/requestReset:
    parameters:
      - in: path
        name: rootAccountId
        schema:
          type: "string"
        required: true
        description: Your root account
    get:
      summary: Request a passphrase reset
      description: This request will result in an e-mail being sent to the registered e-mail address for th root account containing a string required for the `reset` request
      responses:
        '201':
          $ref: '#/components/responses/StandardResultResponse'

  /account/root-account/{rootAccountId}/reset/{resetToken}:
    parameters:
      - in: path
        name: rootAccountId
        schema:
          type: "string"
        required: true
        description: Your root account
      - in: path
        name: resetToken
        schema:
          type: "string"
        required: true
        description: The reset token received via e-mail after a `requestReset` request
    put:
      summary: Supply new credentials
      description: The request body must contain the new passphrase. If the passphrase validation pass, any current root account session will be expired and the account will require the new credentials for the next authentication
      requestBody:
        description: Include the new passphrase in the request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountResetPassphraseSchema'
      responses:
        '201':
          $ref: '#/components/responses/StandardResultResponse'
        '520':
          $ref: '#/components/responses/GenericErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'


components:

  responses:

    NotFoundResponse:
      description: If you run into this response, that the function has not yet been implemented for the choosen end-point or region

    PingResponse:
      description: A standard ping response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PingSchema'

    StandardResultResponse:
      description: A standard response response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardResponseSchema'

    RootAccountRegisterSuccessResponse:
      description: A root account registration successresponse response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RootAccountRegisterSuccessResponseSchema'

    GenericErrorResponse:
      description: All error messages will have a similar structure to the following. Use the trace ID for logging support requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorResponseSchema'

    LogoutResponse:
      description: The response generated by a logout request - regardless of the actual logout result
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LogoutResponseSchema'
  
  schemas:

    PingSchema:
      type: object
      properties: 
        Ping: 
          type: "string"
          description: A ping message from the server.
      example: 
        Ping: ok

    RootAccountRegistrationSchema:
      type: object
      properties:
        AccountName:
          type: "string"
          description: A user defined name for the account - free form text, min 3 characters and max 255 characters in the ASCII range 32 to 126 (decimal)
        PassPhrase:
          type: "string"
          description: A user defined passphrase, min 20 characters and max 1024 characters in the ASCII range 32 to 126 (decimal)
      required:
        - AccountName
        - PassPhrase
      example:
        AccountName: My Company Name
        PassPhrase: This * Is @ An ! Example = Of + A , Very . Strong ? Password

    StandardResponseSchema:
      type: object
      properties:
        IsError:
          type: "boolean"
          description: Flag to indicate of an error occured
          default: false
        ErrorMessage:
          type: "string"
          description: If an error occured, this field will contain the error messaage
          default: null
        TraceId:
          type: "string"
          description: An API generated reference that consumers can quote when requesting support or logging errors
        Message:
          type: "string"
          description: At times other meaningful messages may be passed along with a response. The intended purpose is to provide guidence. Consumers may find it useful, especially in the beginning, to them them understand the flow.
        Data:
          type: "string"
          description: Data generated by the response
          default: null
      required:
        - IsError
        - ErrorMessage
        - TraceId
        - Message
        - Data
      example:
        IsError: false
        ErrorMessage: null
        TraceId: aaaa-bbbb-cccc-dddd
        Message: Response message giving more information or guidance
        Data: Data that could be in the form of just a string or a more complex data structure. This example illustrates data as a normal string.

    LogoutResponseSchema:
      type: object
      properties:
        IsError:
          type: "boolean"
          description: Flag to indicate of an error occured
          default: false
        ErrorMessage:
          type: "string"
          description: If an error occured, this field will contain the error messaage
          default: null
        TraceId:
          type: "string"
          description: An API generated reference that consumers can quote when requesting support or logging errors
        Message:
          type: "string"
          description: At times other meaningful messages may be passed along with a response. The intended purpose is to provide guidence. Consumers may find it useful, especially in the beginning, to them them understand the flow.
        Data:
          type: "string"
          description: Data generated by the response
          default: null
      required:
        - IsError
        - ErrorMessage
        - TraceId
        - Message
        - Data
      example:
        IsError: false
        ErrorMessage: null
        TraceId: aaaa-bbbb-cccc-dddd
        Message: null
        Data: The logout request was processed

    GenericErrorResponseSchema:
      type: object
      properties:
        IsError:
          type: "boolean"
          description: Flag to indicate of an error occured
          default: false
        ErrorMessage:
          type: "string"
          description: If an error occured, this field will contain the error messaage
          default: null
        TraceId:
          type: "string"
          description: An API generated reference that consumers can quote when requesting support or logging errors
        Message:
          type: "string"
          description: At times other meaningful messages may be passed along with a response. The intended purpose is to provide guidence. Consumers may find it useful, especially in the beginning, to them them understand the flow.
        Data:
          type: "string"
          description: Data generated by the response
          default: null
      example:
        IsError: true
        ErrorMessage: An error message explaining what went wrong
        TraceId: aaaa-bbbb-cccc-dddd
        Message: null
        Data: null

    RootAccountRegisterSuccessResponseSchema:
      type: object
      properties:
        IsError:
          type: "boolean"
          description: Flag to indicate of an error occured
          default: false
        ErrorMessage:
          type: "string"
          description: If an error occured, this field will contain the error messaage
          default: null
        TraceId:
          type: "string"
          description: An API generated reference that consumers can quote when requesting support or logging errors
        Message:
          type: "string"
          description: At times other meaningful messages may be passed along with a response. The intended purpose is to provide guidence. Consumers may find it useful, especially in the beginning, to them them understand the flow.
        Data:
          type: "object"
          description: Data generated by the response
          properties:
            RootAccountId:
              type: "string"
              description: The generated root account ID
            RootAccountStatus:
              type: "string"
              description: At this stage, this value should always be PENDING
      example:
        IsError: false
        ErrorMessage: null
        TraceId: xxxx-xxxx-xxxx-xxxx
        Message: Some message
        Data:
          RootAccountId: raxxxxxxx
          RootAccountStatus: PENDING

    RootAccountActivationSchema:
      type: object
      properties:
        Passphrase:
          type: "string"
          description: Use the passphrase you have registered with to confirm the activation
      example:
        Passphrase: abc

    RootAccountAuthenticationSchema:
      type: object
      properties:
        Passphrase:
          type: "string"
          description: Use the passphrase you have registered with to confirm the activation
        TokenTTL:
          type: "integer"
          description: The desired time to live for te token. For root accounts this is a maximum of 24 hours or 86400 seconds.
      required:
        - Passphrase
      example:
        Passphrase: This * Is @ An ! Example = Of + A , Very . Strong ? Password
        TokenTTL: 600

    AccountResetPassphraseSchema:
      type: object
      properties:
        Passphrase:
          type: "string"
          description: Use the passphrase you have registered with to confirm the activation
      required:
        - Passphrase
      example:
        Passphrase: This * Is @ An ! Example = Of + A , Very . Strong ? Password

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
      description: You will receive a JWT token when authenticating (for now, calling '/account/root-account/{rootAccountId}/authenticate')
